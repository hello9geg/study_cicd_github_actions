name: study-GitHub-actions

# ===========================用于演示：Workflow的触发-Events的使用 开始==================================
# on:
#   push:
#     branches:
#       - 'main'  # 表示只有在main分支上进行push操作，才会激活当前工作流

# jobs:
#   build-on-linux: # 自定义job名称‘build-on-linux’
#     runs-on: ubuntu-latest # 在哪个环境中运行
#     steps: # 具体步骤
#       - name: 打印GitHub关于上下文的概念，示例：${{ github.repositoryUrl }}
#         run: echo ${{ github.repositoryUrl }}
#       - name: pre checkout code 
#         run: |
#           pwd
#           ls -lh
#       - name: checkout code
#         uses: actions/checkout@v5
#       - name: after checkout code 
#         run: |
#           pwd
#           ls -lh
#       - name: 安装python-test组件依赖
#         run: pip install pytest
#       - name: run pytest
#         run: pytest
# ===========================用于演示：Workflow的触发-Events的使用 结束==================================



# ===========================用于演示：Workflow的Job-Artifacts的使用 开始==================================
# on:
#   push:
#     branches:
#       - 'main'  # 表示只有在main分支上进行push操作，才会激活当前工作流

# jobs:
#   build-and-upload: # 自定义job名称
#     runs-on: windows-latest # 在哪个环境中运行
#     steps: # 具体步骤
#       - name: 迁出代码
#         uses: actions/checkout@v5
#       - name: 安装python-install依赖
#         run: pip install pyinstaller
#       - name: 打包
#         run: pyinstaller sha256.py -F
#       - name: 上传 artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: sha256-windows-exe
#           path: dist/sha256.exe
#   test-download-artifact: # 自定义job名称
#     runs-on: windows-latest
#     needs: build-and-upload # 需要build-and-upload执行完成后才能执行当前Job
#     steps:
#       - name: 下载 artifact
#         uses: actions/download-artifact@v5
#         with:
#           name: sha256-windows-exe
#       - name: 使用下载好的 artifact
#         run: |
#           pwd
#           ls
#           ./sha256.exe sha256.exe
# ===========================用于演示：Workflow的Job-Artifacts的使用 结束==================================


# ===========================用于演示：环境变量和密钥的使用 开始==================================

# 演示打印GitHub-actions自带变量
# on:
#   push:
#     branches:
#       - 'main'
# jobs:
#   build-and-upload:
#     runs-on: ubuntu-latest
#     steps:
#       - name: 迁出代码
#         uses: actions/checkout@v5
#       - name: 打印默认eve信息
#         run: env
#       - name: 打印具体的env信息
#         run: echo $GITHUB_REPOSITORY

# 演示自定义环境变量并且打印
# on:
#   workflow_dispatch
# env:
#   DAY_OF_WEEK: Monday
# jobs:
#   greeting_job:
#     runs-on: ubuntu-latest
#     env:
#       Greeting: Hello
#     steps:
#       - name: "Say Hello Mona it's Monday"
#         run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
#         env:
#           First_Name: Mona

# 演示GitHub密钥的使用（1、需要先在代码仓库中自定义密钥 2、然后把自定义密钥注入到环境变量中）
on:
  workflow_dispatch
env:
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
jobs:
  test-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: "打印自定义密钥"
        run: echo "自定义密钥== $DB_PASSWORD "

# ===========================用于演示：环境变量和密钥的使用 结束==================================

